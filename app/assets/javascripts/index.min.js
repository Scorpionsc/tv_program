!function(){$(function(){$(".site").each(function(){new n($(this))})});var n=function(n){var i=n,o=i.find(".site__top"),t=500,c=function(){o.on({click:function(){return a(),!1}}),$(window).on({scroll:function(){var n=$(this),i=n.height(),t=n.scrollTop();t>2*i?o.addClass("active"):o.removeClass("active")}})},a=function(){$("html, body").animate({scrollTop:0},t)},e=function(){c()};e()}}();
"use strict";!function(){$(function(){$(".tvShow").each(function(){new t($(this))})});var t=function(t){var a=t,e=$(".tvShow-lang select"),n=a.find(".tvShow__date"),i=a.find(".tvShow__list"),o=$(".tvShow-date"),s=e.val(),r=153318495,c="http://mysite.com/mypic.jpg",l=$(".site__title"),u=function(){o.on({change:function(){h()}}),e.on({change:function(){s=$(this).val(),$(this).parent().find("span").text(s),h()}}),$(".tvShow__title").on({click:function(){console.log(1e3),_()}})},v=function(){u(),p(),d(),m(),g()},p=function(){o.datepicker({dateFormat:"yy-mm-dd"})},d=function(){VK.init({apiId:r})},_=function(){html2canvas(i[0],{onrendered:function(t){console.log(t.toDataURL()),$("body").append('<img src="'+t.toDataURL()+'">')}})},h=function(){var t="1plus1",a=o.val(),e=$(".tvShow__list");$.ajax({url:"https://api.ovva.tv/v2/"+s+"/tvguide/"+t+"/"+a,dataType:"json",type:"get",success:function(t){if(t.error)alert(t.error);else{var a=o.val().split("-");n.text(a[2]+"."+a[1]+"."+a[0]),$(".tvShow__list > *").remove(),m();for(var i=t.data.programs.length,s=0;s<i;s++){var r=1e3*t.data.programs[s].realtime_begin,c=t.data.programs[s].subtitle,l=t.data.programs[s].title,u=new Date(r),v=u.getHours(),p=u.getMinutes(),d="";v<10&&(v="0"+v),p<10&&(p="0"+p),t.data.programs[s].is_on_the_air&&(d="active"),e.append('<div class="tvShow__item '+d+'"><img class="tvShow__item-thumbnail" src="'+t.data.programs[s].image.preview+'" alt=""><div class="tvShow__item-description"><strong class="tvShow__item-time">'+v+":"+p+'</strong><span class="tvShow__item-title">'+l+'</span><span class="tvShow__item-subtitle">'+c+"</span></div></div>"),d=""}}},error:function(t){"abort"!=t.statusText&&alert("ERROR!!!")}})},m=function(){switch(s){case"ua":l.text("TV програма");break;case"ru":l.text("TV программа")}},g=function(){$(".site__header-column_buttons").append(VK.Share.button({title:"1+1 program",description:"Программа телепередач на сегодня",image:c,noparse:!0},{type:"custom",text:'<button class="sharing"></button>'}))};v()}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
